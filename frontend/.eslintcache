[{"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\index.js":"1","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\reducers\\rootReducer.js":"3","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\App.js":"4","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\reducers\\titles.js":"5","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\reducers\\posts.js":"6","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\CommentForm.js":"7","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\Comment.js":"8","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\Post.js":"9","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\Header.js":"10","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\HomePage.js":"11","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\PostForm.js":"12","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\Routes.js":"13","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\PostList.js":"14","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\FilterPost.js":"15","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\PostDetails.js":"16"},{"size":889,"mtime":1608045580490,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":190,"mtime":1608050113102,"results":"20","hashOfConfig":"18"},{"size":896,"mtime":1607975384162,"results":"21","hashOfConfig":"18"},{"size":947,"mtime":1608057510358,"results":"22","hashOfConfig":"18"},{"size":1922,"mtime":1608056047257,"results":"23","hashOfConfig":"18"},{"size":1466,"mtime":1608054201472,"results":"24","hashOfConfig":"18"},{"size":187,"mtime":1607979921705,"results":"25","hashOfConfig":"18"},{"size":254,"mtime":1607974709769,"results":"26","hashOfConfig":"18"},{"size":362,"mtime":1607969181076,"results":"27","hashOfConfig":"18"},{"size":170,"mtime":1608042590278,"results":"28","hashOfConfig":"18"},{"size":2792,"mtime":1608056195826,"results":"29","hashOfConfig":"18"},{"size":885,"mtime":1608048467189,"results":"30","hashOfConfig":"18"},{"size":655,"mtime":1608048275376,"results":"31","hashOfConfig":"18"},{"size":314,"mtime":1607982282726,"results":"32","hashOfConfig":"18"},{"size":3831,"mtime":1608057579096,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"atp90q",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\index.js",[],["74","75"],"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\reducers\\rootReducer.js",[],"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\App.js",["76","77","78","79","80","81","82","83"],"import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\n\n//Components\nimport Header from './Header';\nimport Comment from './Comment';\nimport CommentForm from './CommentForm';\nimport Post from './Post';\nimport PostForm from './PostForm';\nimport HomePage from './HomePage';\nimport Routes from './Routes';\n\nfunction App() {\n  const [comments, setComments] = useState([]);\n  const [posts, setPosts] = useState([]);\n\n  const createComment = (newComment) => setComments([...comments, newComment]);\n\n  const addPost = (newPost) => setPosts([...posts, newPost]);\n\n  const commentsRender = comments.map(c => <Comment comment={c.comment} key={c.id}/>);\n\n  const postsRender = posts.map(p => <Post title={p.title} description={p.description} post={p.post} key={p.id}/>);\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\reducers\\titles.js",["84"],"import data from '../dummyPosts.json';\r\n\r\nfunction makeTitles(data) {\r\n    const postKeys = Object.keys(data);\r\n    const titleArr = postKeys.map(key => ({title: data[key].title, id: data[key].id}));\r\n    return titleArr;\r\n}\r\nconst INITIAL_STATE = makeTitles({});\r\n\r\nfunction titles(state = INITIAL_STATE, action) {\r\n    switch(action.type) {\r\n        case 'SHOW_TITLES':\r\n            return(state)\r\n\r\n        case 'ADD_TITLE':\r\n            return([...state, action.post]);\r\n\r\n        case 'EDIT_TITLE':\r\n            console.log(action.post.title);\r\n            const titles = state.map(t => t.id === action.post.id ? action.post : t);\r\n            console.log(titles);\r\n            return titles;\r\n\r\n        case 'REMOVE_TITLE':\r\n            console.log(state.filter(t => t.id !== action.post.id));\r\n            return state.filter(t => t.id !== action.post.id)\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default titles;","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\reducers\\posts.js",["85"],"//sor same thing over here. all i really care about up front is seeing a post. we'll call that get post. whoops sorry, i meant to say GET_POST!!!!!!\r\n\r\nimport data from './../dummyPosts.json';\r\n\r\nfunction posts(state = {}, action) {\r\n    console.log(state);\r\n    let p = state[action.postId];\r\n\r\n    switch(action.type) {\r\n        case 'GET_POST':\r\n            return { ...state, post: action.post}\r\n\r\n        case 'EDIT_POST':\r\n            console.log(action.post);\r\n            console.log({...state, [action.post.id]: {...action.post, comments: []}})\r\n            return {...state, [action.post.id]: {...action.post, comments: []}}\r\n\r\n        case 'ADD_POST':\r\n            console.log(action.post);\r\n            console.log({...state, [action.post.id]: {...action.post, comments: []}})\r\n            return {...state, [action.post.id]: {...action.post, comments: []}};\r\n\r\n        case 'REMOVE_POST':\r\n            console.log(action.post);\r\n            let posts = {...state};\r\n            delete posts[action.post.id];\r\n            console.log(posts);\r\n            return posts;\r\n\r\n        case 'ADD_COMMENT':\r\n            console.log(action.comment);\r\n            let po = {...state, [action.postId]: {...p, comments: [...p.comments, action.comment]}};\r\n            console.log(po);\r\n            return {...state, [action.postId]: {...p, comments: [...p.comments, action.comment]}};\r\n\r\n        case 'REMOVE_COMMENT':\r\n            console.log(action.commentId);\r\n            console.log(action.postId);\r\n            console.log(state);\r\n            let pos = {...state, [action.postId]: {...p, comments: p.comments.filter(c => c.id !== action.commentId)}};\r\n            console.log(pos);\r\n            return {...state, [action.postId]: {...p, comments: p.comments.filter(c => c.id !== action.commentId)}};\r\n\r\n        default:\r\n            console.log(state);\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default posts;","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\CommentForm.js",["86","87"],"import {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport data from './dummyPosts.json';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst CommentForm = ({addComment, postId, id}) => {//we will be adding a comment to the comment state on our Post component\r\n    const INITIAL_STATE = {\r\n        comment: \"\"\r\n    };\r\n\r\n    const post = useSelector(store => store.posts[postId]);\r\n    const dispatch = useDispatch();\r\n\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setFormData(() => ({\r\n            ...formData,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        // addComment({...formData, id: uuidv4()});\r\n        // const selectedPost = data[postId];\r\n        // console.log(postId);\r\n        // selectedPost.comments.push({...formData, id: uuidv4()});\r\n        dispatch({ type: 'ADD_COMMENT', comment: {...formData, id: uuidv4()}, postId: postId});\r\n        setFormData(INITIAL_STATE);\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={submit}>\r\n            <label htmlFor=\"comment\">Comment</label>\r\n            <input\r\n            onChange={handleChange}\r\n            type='text'\r\n            name='comment'\r\n            value={formData.comment}\r\n            />\r\n            <button>Submit Comment</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CommentForm;","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\Comment.js",[],"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\Post.js",[],"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\Header.js",[],"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\HomePage.js",[],"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\PostForm.js",[],"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\Routes.js",["88","89","90","91","92"],"import {Route, Switch, Redirect} from 'react-router-dom';\r\nimport data from './dummyPosts.json';\r\n\r\n//components\r\nimport HomePage from './HomePage';\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\nimport Post from './Post';\r\nimport PostForm from './PostForm';\r\nimport FilterPost from './FilterPost';\r\nimport PostDetails from './PostDetails';\r\n\r\nconst Routes = () => {\r\n    return(\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <HomePage/>\r\n            </Route>\r\n            <Route exact path=\"/new\">\r\n                <PostForm/>\r\n            </Route>\r\n            {/* <Route path=\"/:id\">\r\n                <FilterPost posts={data}/>\r\n            </Route> */}\r\n            <Route path=\"/:id\">\r\n                <PostDetails/>\r\n            </Route>\r\n            <Redirect to=\"/\"/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\PostList.js",["93"],"import {Link} from 'react-router-dom';\r\nimport Post from './Post';\r\nimport data from './dummyPosts.json';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PostList = () => {\r\n    const titles = useSelector(store => store.titles);\r\n    // const dispatch = useDispatch();\r\n    // const display = dispatch({type: 'SHOW_TITLES'});\r\n    // console.log(display);\r\n    // console.log(titles);\r\n    // // // const dispatch = useDispatch();\r\n    // // // const t =\r\n    return(\r\n        <ul>\r\n            {titles.map(t => <li key={t.id}><Link to={`/${t.id}`}><Post title={t.title} key={t.id}/></Link></li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\FilterPost.js",[],"C:\\Users\\James Reid\\desktop\\blog\\frontend\\src\\PostDetails.js",["94","95"],"import './Post.css'\r\nimport {useState} from 'react';\r\nimport data from './dummyPosts.json';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\nimport PostForm from './PostForm';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst PostDetails = () => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const {id} = useParams();\r\n    const post = useSelector(store => store.posts[id]);\r\n    const dispatch = useDispatch();\r\n\r\n    // const removePost = (id) => {\r\n    //     delete data[id];\r\n    //     // data.splice(postIdx, 1);\r\n    //     history.push('/');\r\n    // }\r\n\r\n    const removePost = (id) => {\r\n        dispatch({ type: \"REMOVE_POST\", post: {id: id}});\r\n        dispatch({ type: 'REMOVE_TITLE', post: {id: id}});\r\n        history.push('/');\r\n    }\r\n\r\n    const toggleIsEditing = () => setIsEditing(!isEditing);\r\n\r\n    const removeComment = (id) => {\r\n        // // const p = data.find(p => p.id === post.id);\r\n        // const commentIdx = data[post.id].comments.indexOf(data[post.id].comments.find(c => c.id === id));\r\n        // data[post.id].comments.splice(commentIdx, 1);\r\n        dispatch({ type: \"REMOVE_COMMENT\", commentId: id, postId: post.id});\r\n        history.push(`/${post.id}`)\r\n    }\r\n\r\n\r\n    const details = <div id='post-div'>\r\n        <h1>{post.title}</h1>\r\n        <button onClick={toggleIsEditing}>Edit Post</button>\r\n        <button onClick={() => removePost(post.id)}>Remove Post</button>\r\n        <h4>{post.description}</h4>\r\n        <p>{post.post}</p>\r\n        {console.log(post.comments)}\r\n        <CommentForm postId={post.id}/>\r\n        <ul>{post.comments.map(c => <Comment comment={c.comment} id={c.id} postId = {post.id} handleRemove={removeComment}/>)}</ul>\r\n    </div>\r\n\r\n\r\n    return(\r\n        <div id='post-div'>\r\n            {isEditing ? <PostForm post={post}/> : details}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PostDetails;\r\n\r\n    // const [formData, setFormData] = useState({\r\n    //     title: post.title,\r\n    //     description: post.description,\r\n    //     post: post.post\r\n    // });\r\n\r\n\r\n    // const handleChange = e => {\r\n    //     const {name, value} = e.target;\r\n    //     setFormData(() => ({\r\n    //         ...formData,\r\n    //         [name]: value\r\n    //     }));\r\n    // };\r\n\r\n    // const submit = e => {\r\n    //     e.preventDefault();\r\n    //     // createPost({...formData, id: uuidv4()});\r\n    //     // const postIdx = data.indexOf(data.find(p => p.id === post.id));\r\n    //     // data.splice(postIdx, 1);\r\n    //     // const tempId = uuidv4();\r\n    //     // data.push({...formData, id: tempId, comments: []});\r\n    //     data[post.id] = {...formData, id: post.id, comments: []};\r\n    //     history.push(`/${post.id}`);\r\n    //     setIsEditing(false);\r\n    //     // setFormData(INITIAL_STATE);\r\n    // };\r\n\r\n    // const f = <div><form onSubmit={submit}>\r\n    // <label htmlFor=\"title\">Post Title</label>\r\n    // <input\r\n    // onChange={handleChange}\r\n    // name=\"title\"\r\n    // type=\"text\"\r\n    // value={formData.title}\r\n    // id='title'\r\n    // />\r\n    // <br></br>\r\n    // <label htmlFor=\"description\">Post Description</label>\r\n    // <input\r\n    // onChange={handleChange}\r\n    // name=\"description\"\r\n    // type=\"text\"\r\n    // value={formData.description}\r\n    // id=\"description\"\r\n    // />\r\n    // <br></br>\r\n\r\n    // <label htmlFor=\"post\">Post</label>\r\n    // <textarea\r\n    // onChange={handleChange}\r\n    // name=\"post\"\r\n    // type=\"text\"\r\n    // value={formData.post}\r\n    // id=\"post\"\r\n    // rows={5}\r\n    // cols={40}\r\n    // />\r\n    // <br></br>\r\n\r\n    // <button>Submit</button>\r\n\r\n    // </form></div>",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":12},{"ruleId":"100","severity":1,"message":"104","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":19},{"ruleId":"100","severity":1,"message":"105","line":10,"column":8,"nodeType":"102","messageId":"103","endLine":10,"endColumn":16},{"ruleId":"100","severity":1,"message":"106","line":11,"column":8,"nodeType":"102","messageId":"103","endLine":11,"endColumn":16},{"ruleId":"100","severity":1,"message":"107","line":18,"column":9,"nodeType":"102","messageId":"103","endLine":18,"endColumn":22},{"ruleId":"100","severity":1,"message":"108","line":20,"column":9,"nodeType":"102","messageId":"103","endLine":20,"endColumn":16},{"ruleId":"100","severity":1,"message":"109","line":22,"column":9,"nodeType":"102","messageId":"103","endLine":22,"endColumn":23},{"ruleId":"100","severity":1,"message":"110","line":24,"column":9,"nodeType":"102","messageId":"103","endLine":24,"endColumn":20},{"ruleId":"100","severity":1,"message":"111","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":12},{"ruleId":"100","severity":1,"message":"111","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":12},{"ruleId":"100","severity":1,"message":"111","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":12},{"ruleId":"100","severity":1,"message":"112","line":11,"column":11,"nodeType":"102","messageId":"103","endLine":11,"endColumn":15},{"ruleId":"100","severity":1,"message":"111","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":12},{"ruleId":"100","severity":1,"message":"113","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":15},{"ruleId":"100","severity":1,"message":"104","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":19},{"ruleId":"100","severity":1,"message":"114","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":12},{"ruleId":"100","severity":1,"message":"115","line":10,"column":8,"nodeType":"102","messageId":"103","endLine":10,"endColumn":18},{"ruleId":"100","severity":1,"message":"111","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":12},{"ruleId":"100","severity":1,"message":"111","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":12},{"ruleId":"100","severity":1,"message":"116","line":4,"column":16,"nodeType":"102","messageId":"103","endLine":4,"endColumn":22},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CommentForm' is defined but never used.","'PostForm' is defined but never used.","'HomePage' is defined but never used.","'createComment' is assigned a value but never used.","'addPost' is assigned a value but never used.","'commentsRender' is assigned a value but never used.","'postsRender' is assigned a value but never used.","'data' is defined but never used.","'post' is assigned a value but never used.","'Comment' is defined but never used.","'Post' is defined but never used.","'FilterPost' is defined but never used.","'uuidv4' is defined but never used.","no-global-assign","no-unsafe-negation"]